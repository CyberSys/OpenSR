# - Try to find Iconv 
# Once done this will define 
# 
#  ICONV_FOUND - system has Iconv 
#  ICONV_INCLUDE_DIRS - the Iconv include directory 
#  ICONV_LIBRARIES - link these to use Iconv 
#  ICONV_SECOND_ARGUMENT_IS_CONST - the second argument for iconv() is const
# 

INCLUDE(CheckFunctionExists)
INCLUDE(CheckCCompilerFlag)
INCLUDE(CheckCSourceCompiles)
INCLUDE(FindPackageHandleStandardArgs)

FIND_PATH(ICONV_INCLUDE_DIR iconv.h)

IF(ICONV_INCLUDE_DIR)
  CHECK_FUNCTION_EXISTS(iconv ICONV_LIBC_HAS_ICONV)
 
  SET(ICONV_LIB_FOUND FALSE)
  IF(ICONV_LIBC_HAS_ICONV)
    SET(ICONV_LIBRARY)
    SET(ICONV_LIB_FOUND TRUE)
  ELSE(ICONV_LIBC_HAS_ICONV)
    FIND_LIBRARY(ICONV_LIBRARY NAMES iconv)
    IF(ICONV_LIBRARY)
      SET(ICONV_LIB_FOUND TRUE)
    ENDIF(ICONV_LIBRARY)
  ENDIF(ICONV_LIBC_HAS_ICONV)
ENDIF(ICONV_INCLUDE_DIR)

SET(ICONV_LIBRARIES ${ICONV_LIBRARY})
SET(ICONV_INCLUDE_DIRS ${ICONV_INCLUDE_DIR})

FIND_PACKAGE_HANDLE_STANDARD_ARGS(Iconv DEFAULT_MSG ICONV_INCLUDE_DIR ICONV_LIB_FOUND)

IF(ICONV_FOUND)
  SET(CMAKE_REQUIRED_INCLUDES ${ICONV_INCLUDE_DIRS})
  SET(CMAKE_REQUIRED_LIBRARIES ${ICONV_LIBRARIES})
  SET(CMAKE_C_FLAGS_BACKUP "${CMAKE_C_FLAGS}")
  
  CHECK_C_COMPILER_FLAG("-Werror" ICONV_HAVE_WERROR)
  IF(ICONV_HAVE_WERROR)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror")
  ENDIF(ICONV_HAVE_WERROR)
  CHECK_C_SOURCE_COMPILES("
  #include <iconv.h>
  int main(){
    iconv_t conv = 0;
    const char* in = 0;
    size_t ilen = 0;
    char* out = 0;
    size_t olen = 0;
    iconv(conv, &in, &ilen, &out, &olen);
    return 0;
  }
  " ICONV_SECOND_ARGUMENT_IS_CONST)

  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS_BACKUP}")
  SET(CMAKE_REQUIRED_LIBRARIES)
  SET(CMAKE_REQUIRED_INCLUDES)
ENDIF(ICONV_FOUND)

MARK_AS_ADVANCED(ICONV_INCLUDE_DIR ICONV_LIBRARY ICONV_SECOND_ARGUMENT_IS_CONST)

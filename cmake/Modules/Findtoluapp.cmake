# - Try to find tolua++
# Once done this will define 
# 
#  TOLUAPP_FOUND - system has tolua++
#  TOLUAPP_INCLUDE_DIR - the tolua++ include directory 
#  TOLUAPP_LIBRARIES - Link these to use tolua++
# 

FIND_PATH(TOLUAPP_INCLUDE_DIR NAMES tolua++.h
  PATHS
  ${PROJECT_BINARY_DIR}/include
  ${PROJECT_SOURCE_DIR}/include
  ENV CPATH
  /usr/include
  /usr/local/include
  NO_DEFAULT_PATH
)
FIND_PATH(TOLUAPP_INCLUDE_DIR NAMES tolua++.h)

FIND_LIBRARY(TOLUAPP_LIBRARIES NAMES tolua++ tolua++5.1
  PATHS
  ${PROJECT_BINARY_DIR}/lib64
  ${PROJECT_BINARY_DIR}/lib
  ${PROJECT_SOURCE_DIR}/lib64
  ${PROJECT_SOURCE_DIR}/lib
  ENV LD_LIBRARY_PATH
  ENV LIBRARY_PATH
  /usr/lib64
  /usr/lib
  /usr/local/lib64
  /usr/local/lib
  NO_DEFAULT_PATH
)
FIND_LIBRARY(TOLUAPP_LIBRARIES NAMES tolua++ tolua++5.1)

FIND_PROGRAM(TOLUAPP_BINARY NAMES tolua++ tolua++5.1
  PATHS
  ${PROJECT_BINARY_DIR}/bin
  ${PROJECT_SOURCE_DIR}/bin
  ENV PATH
  /usr/bin
  /usr/local/bin
  NO_DEFAULT_PATH
)
FIND_PROGRAM(TOLUAPP_BINARY NAMES tolua++ tolua++5.1)

IF(TOLUAPP_INCLUDE_DIR AND TOLUAPP_LIBRARIES AND TOLUAPP_BINARY)
   SET(TOLUAPP_FOUND TRUE)
ENDIF(TOLUAPP_INCLUDE_DIR AND TOLUAPP_LIBRARIES AND TOLUAPP_BINARY)

IF(TOLUAPP_FOUND)
  IF(NOT TOLUAPP_FIND_QUIETLY)
    MESSAGE(STATUS "Found tolua++: ${TOLUAPP_LIBRARIES}, ${TOLUAPP_BINARY}")
  ENDIF(NOT TOLUAPP_FIND_QUIETLY)
ELSE(TOLUAPP_FOUND)
  IF(TOLUAPP_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "Could not find tolua++")
  ENDIF(TOLUAPP_FIND_REQUIRED)
ENDIF(TOLUAPP_FOUND)

MARK_AS_ADVANCED(TOLUAPP_INCLUDE_DIR TOLUAPP_LIBRARIES TOLUAPP_BINARY)

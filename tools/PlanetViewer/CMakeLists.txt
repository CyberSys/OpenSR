FIND_PACKAGE(Qt5Core REQUIRED)
FIND_PACKAGE(Qt5Widgets REQUIRED)
FIND_PACKAGE(Qt5OpenGL REQUIRED)

SET(CMAKE_AUTOMOC ON)

SET(PV_SOURCES
    main.cpp
    MainWindow.cpp
    PlanetViewer.cpp
    PlanetModel.cpp
)

SET(PV_UI
    MainWindow.ui
)

INCLUDE_DIRECTORIES(
  ${JSONCPP_INCLUDE_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_SOURCE_DIR}/libRanger
  ${Qt5Widgets_INCLUDE_DIRS}
  ${Qt5Core_INCLUDE_DIRS}
  ${Qt5OpenGL_INCLUDE_DIRS}
  ${Boost_INCLUDE_DIR}
)

IF(WIN32)
    INCLUDE_DIRECTORIES(
        ${GLEW_INCLUDE_DIR}
    )
ENDIF(WIN32)

SET(PV_COMPILE_FLAGS "${Qt5Core_EXECUTABLE_COMPILE_FLAGS} ${Qt5Widgets_EXECUTABLE_COMPILE_FLAGS} ${Qt5OpenGL_EXECUTABLE_COMPILE_FLAGS} -DGL_GLEXT_PROTOTYPES")

QT5_WRAP_UI(PV_UI_SOURCES ${PV_UI})
QT5_ADD_RESOURCES(PV_RES_SOURCES resources.qrc)

ADD_EXECUTABLE(opensr-planetviewer ${PV_SOURCES} ${PV_UI_SOURCES} ${PV_RES_SOURCES})

SET_TARGET_PROPERTIES(opensr-planetviewer PROPERTIES COMPILE_FLAGS ${PV_COMPILE_FLAGS})
IF(WIN32)
    TARGET_LINK_LIBRARIES(opensr-planetviewer ranger Qt5::Core Qt5::Widgets Qt5::OpenGL ${OPENGL_LIBRARIES} ${GLEW_LIBRARIES} ${JSONCPP_LIBRARIES})
ELSE(WIN32)
    TARGET_LINK_LIBRARIES(opensr-planetviewer ranger Qt5::Core Qt5::Widgets Qt5::OpenGL ${OPENGL_LIBRARIES} ${JSONCPP_LIBRARIES})
ENDIF(WIN32)

INSTALL(TARGETS opensr-planetviewer RUNTIME DESTINATION bin)

$#include <boost/shared_ptr.hpp>
$#include <Texture.h>
$#include <AnimatedTexture.h>
$#include <Font.h>
$#include <ResourceManager.h>
$#include <AnimatedSprite.h>
$#include <Sprite.h>
$#include <Object.h>
$#include <GAISprite.h>
$#include <LuaWidget.h>

namespace Rangers
{
class ResourceManager
{
public:
    void addRPKG(const std::wstring& path);
    void addDir(const std::wstring& path);

    char* loadData(const std::wstring& name, size_t &size);
    boost::shared_ptr<Rangers::Texture> loadTexture(const std::wstring& name);
    boost::shared_ptr<Rangers::AnimatedTexture> loadAnimation(const std::wstring& name, bool onDemand);
    boost::shared_ptr<Rangers::AnimatedTexture> loadAnimation(const std::wstring& name);
    boost::shared_ptr<Rangers::Font> loadFont(const std::wstring& name, int size);
    
    Rangers::GAISprite loadDeltaAnimation(const std::wstring& name);
    Rangers::GAISprite loadDeltaAnimation(const std::wstring& name, Rangers::Object *parent);

    Rangers::LuaWidget loadLuaWidget(const std::wstring& name);
    Rangers::LuaWidget loadLuaWidget(const std::wstring& name, Rangers::Widget *parent);
    
    static ResourceManager *instance();
};
}
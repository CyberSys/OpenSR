$#include <Object.h>
$#include <Types.h>
$#include <Texture.h>
$#include <Sprite.h>

$pfile "Object.pkg"

namespace Rangers
{
enum TextureScaling {TEXTURE_NO, TEXTURE_NORMAL, TEXTURE_KEEPASPECT, TEXTURE_TILE_X, TEXTURE_TILE_Y, TEXTURE_TILE};
enum SpriteXPosition {POSITION_X_LEFT, POSITION_X_RIGHT, POSITION_X_CENTER};
enum SpriteYPosition {POSITION_Y_TOP, POSITION_Y_BOTTOM, POSITION_Y_CENTER};
class Sprite: public Object
{
public:
    Sprite(boost::shared_ptr<Rangers::Texture> texture, Rangers::Object *parent, TextureScaling ts, SpriteXPosition xpos, SpriteYPosition ypos);
    Sprite(boost::shared_ptr<Rangers::Texture> texture, Rangers::Object *parent, TextureScaling ts);
    Sprite(boost::shared_ptr<Rangers::Texture> texture, Rangers::Object *parent);
    Sprite(boost::shared_ptr<Rangers::Texture> texture);
    Sprite(Rangers::Object *parent);
    Sprite(const Rangers::Sprite& other);
    
    ~Sprite();

    void draw() const;
    void processMain();

    void setSpriteOrigin(SpriteXPosition xpos, SpriteYPosition ypos);
    void setGeometry(float width, float height);
    void setWidth(float width);
    void setHeight(float height);
    void setTextureScaling(TextureScaling  ts);
};
};

#endif

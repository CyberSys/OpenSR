ADD_SUBDIRECTORY(world)

SET(SOURCES
    Engine.cpp
    Node.cpp
    Object.cpp
    Sprite.cpp
    Types.cpp
    Texture.cpp
    Label.cpp
    Font.cpp
    AnimatedTexture.cpp
    AnimatedSprite.cpp
    Widget.cpp
    Utils.cpp
    ConsoleWidget.cpp
    LineEditWidget.cpp
    Log.cpp
    ColorLabel.cpp
    ResourceAdapter.cpp
    RPKGAdapter.cpp
    ResourceManager.cpp 
    FSAdapter.cpp
    LuaBindings.cpp
    LuaWidget.cpp
    GAISprite.cpp
    Button.cpp
    Action.cpp
    WidgetNode.cpp
    CheckBox.cpp
    NinePatch.cpp
    ScrollArea.cpp
    JSONHelper.cpp
    Styles.cpp
    SoundManager.cpp
    Sound.cpp
    Plugin.cpp
)

INCLUDE_DIRECTORIES(
    ${SDL_INCLUDE_DIR}
    ${OPENGL_INCLUDE_DIR}
    ${Boost_INCLUDE_DIRS}
    ${FREETYPE_INCLUDE_DIRS}
    ${ICONV_INCLUDE_DIR}
    ${Boost_INCLUDE_DIRS}
    ${LUA_INCLUDE_DIR}
    ${JSONCPP_INCLUDE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}
    ${LUABIND_INCLUDE_DIR}
    ${SDLMIXER_INCLUDE_DIR}
    ${LIBINTL_INCLUDE_DIR}
    ${CMAKE_SOURCE_DIR}/include/OpenSR
    ${CMAKE_BINARY_DIR}/include/OpenSR
    ${CMAKE_SOURCE_DIR}/libRanger
)

IF(WIN32)
IF(MSVC)
    ADD_DEFINITIONS(-DNOMINMAX)
	ADD_DEFINITIONS(-wd4251)
ENDIF(MSVC)
    INCLUDE_DIRECTORIES(
        ${GLEW_INCLUDE_DIR}
    )
ENDIF(WIN32)

ADD_LIBRARY(engine SHARED ${SOURCES})
SET_TARGET_PROPERTIES(engine PROPERTIES VERSION "${MAJOR_VERSION}.${MINOR_VERSION}" COMPILE_FLAGS "-DRANGERS_ENGINE_BUILD")
TARGET_LINK_LIBRARIES(engine ranger)

IF(WIN32)
TARGET_LINK_LIBRARIES(engine 
    ${SDL_LIBRARY} 
    ${OPENGL_LIBRARIES} 
    ${FREETYPE_LIBRARIES} 
    ${LUA_LIBRARIES}
    ${Boost_LIBRARIES} 
    ${GLEW_LIBRARIES}
    ${JSONCPP_LIBRARIES}
    ${LUABIND_LIBRARY}
    ${SDLMIXER_LIBRARY}
    ${LIBINTL_LIBRARIES}
)
ELSE(WIN32)
TARGET_LINK_LIBRARIES(engine
    ${SDL_LIBRARY} 
    ${OPENGL_LIBRARIES} 
    ${FREETYPE_LIBRARIES} 
    ${LUA_LIBRARIES}
    ${Boost_LIBRARIES}
    ${JSONCPP_LIBRARIES}
    ${LUABIND_LIBRARY}
    ${SDLMIXER_LIBRARY}
    ${LIBINTL_LIBRARIES}
    dl
)
ENDIF(WIN32)

ADD_EXECUTABLE(opensr main.cpp)
TARGET_LINK_LIBRARIES(opensr engine ranger)
